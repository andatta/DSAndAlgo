package com.anutosh;

import java.util.Scanner;

public class LinkedList {

	public static void main(String[] args) {

		System.out.println("Select one from below choices:");
		System.out.println("1. Insert elements to end of list");
		System.out.println("2. Insert elements to head of list");

		Scanner scanner = new Scanner(System.in);
		int opt = scanner.nextInt();

		switch (opt) {
		case 1:
			insertElementsAtTail();
			break;
		case 2:
			insertElementsAtHead();
			break;
		}

	}

	private static void insertElementsAtTail() {
		Node head = null;
		for (int i = 1; i <= 10; i++) {
			head = insertAtTail(head, i);
		}
		printLinkedList(head);
	}

	private static void insertElementsAtHead() {
		Node head = null;
		for (int i = 1; i <= 10; i++) {
			head = insertAtHead(head, i);
		}
		printLinkedList(head);
	}

	private static Node insertAtTail(Node head, int data) {
		Node newNode = new Node();
		newNode.data = data;

		if (head == null) {
			head = newNode;
		} else {
			Node last = head;
			while (last.next != null) {
				last = last.next;
			}
			last.next = newNode;
		}
		return head;
	}

	private static Node insertAtHead(Node head, int data) {
		Node newNode = new Node();
		newNode.data = data;

		if (head == null) {
			head = newNode;
		} else {
			newNode.next = head;
			head = newNode;
		}
		return head;
	}
	
	private static Node insertNth(Node head, int data, int position){
		Node n = new Node();
		n.data = data;
		
		if(head == null){
			head = n;
		}else{
			int i = 0;
			Node currNode = head;
			while(currNode != null){
				if(position == i){
					n.next = currNode;
					currNode = n;
					break;
				}
				currNode = currNode.next;
			}
		}
		
		return head;
	}

	private static void printLinkedList(Node head) {
		while (head != null) {
			System.out.print(head.data + " ");
			head = head.next;
		}
	}

}
